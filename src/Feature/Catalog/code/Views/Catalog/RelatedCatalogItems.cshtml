@*//-----------------------------------------------------------------------
    // Copyright 2016 Sitecore Corporation A/S
    // Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
    // except in compliance with the License. You may obtain a copy of the License at
    //       http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software distributed under the
    // License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // either express or implied. See the License for the specific language governing permissions
    // and limitations under the License.
    // -------------------------------------------------------------------------------------------*@
@using Sitecore.Feature.Commerce.Catalog.Models
@model RelatedCatalogItemsViewModel

@{
    var catalogItemList = new List<CategoryViewModel>();

    if (Model == null)
    {
        return;
    }

    if (Model.RelatedProducts != null && Model.RelatedProducts.Count > 0)
    {
        catalogItemList.AddRange(Model.RelatedProducts);
    }

    if (Model.RelatedCategories != null && Model.RelatedCategories.Count > 0)
    {
        catalogItemList.AddRange(Model.RelatedCategories);
    }

    if (catalogItemList.Count == 0)
    {
        return;
    }

    Func<CategoryViewModel, int, string> GetId = (relationship, relationshipIndex) => relationship.DisplayName.Replace(' ', '-').Replace('*', '-').ToLowerInvariant() + "-" + relationshipIndex.ToString();
}


<ul class="nav nav-tabs nav-justified" role="tablist">
    @{
        var index = 0;
        foreach (var relationship in catalogItemList)
        {
            relationship.Initialize(Model.Rendering);

            <li role="presentation" class="@(index == 0 ? "active" : "")">
                <a href="#tab-@GetId(relationship, index)" role="tab" data-toggle="tab">
                    @if (relationship.LookupRelationshipItem != null)
                    {
                        @relationship.RelationshipDescriptionRenderer
                    }
                    else
                    {
                        @relationship.RelationshipDescription
                    }
                </a>
            </li>
            index++;
        }
    }
</ul>
<div class="tab-content">
    @{
        var contentIndex = 0;
        foreach (var relationship in catalogItemList)
        {
            <div role="tabpanel" class="tab-pane @(contentIndex == 0 ? "active" : "")" id="tab-@GetId(relationship, contentIndex)">
                @Html.Partial("_RelatedCatalogItemsSlide", relationship)
            </div>
            contentIndex++;
        }
    }
</div>