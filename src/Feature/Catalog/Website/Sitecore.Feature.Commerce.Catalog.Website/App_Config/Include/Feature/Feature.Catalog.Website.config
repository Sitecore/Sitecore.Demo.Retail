<?xml version="1.0"?>

<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
    <sitecore>
        <services>
            <configurator type="Sitecore.Feature.Commerce.Catalog.Website.Infrastructure.ServicesConfigurator, Sitecore.Feature.Commerce.Catalog.Website"/>
        </services>
        <pipelines>
            <initialize>
                <processor type="Sitecore.Feature.Commerce.Catalog.Website.Infrastructure.Pipelines.InitializeRoutes, Sitecore.Feature.Commerce.Catalog.Website" resolve="true" patch:before="processor[@type='Sitecore.Mvc.Pipelines.Loader.InitializeGlobalFilters, Sitecore.Mvc']" />
            </initialize>
            <httpRequestBegin>
                <!-- This processor sets the context item to the product that is matched to incoming URL parameters. -->
                <processor type="Sitecore.Feature.Commerce.Catalog.Website.Infrastructure.Pipelines.ProductItemResolver, Sitecore.Feature.Commerce.Catalog.Website" resolve="true" patch:before="processor[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']" />
                <!-- This processor redirects from invalid product URLs (/sitecore/commerce/...) to a shop URL corresponding to one found in the site. -->
                <processor type="Sitecore.Feature.Commerce.Catalog.Website.Infrastructure.Pipelines.ProductItemRedirector, Sitecore.Feature.Commerce.Catalog.Website" resolve="true" patch:after="processor[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']">
                    <IncludeCatalog>false</IncludeCatalog>
                    <IncludeFriendlyName>true</IncludeFriendlyName>
                    <UseShopLinks>true</UseShopLinks>
                </processor>  
            </httpRequestBegin>
        </pipelines>
        <linkManager defaultProvider="sitecore">
            <patch:attribute name="defaultProvider">commerce</patch:attribute>
            <providers>
                <add name="commerce"
                     includeFriendlyName="true"
                     useShopLinks="true"
                     includeCatalog="false"
                     addAspxExtension="false"
                     alwaysIncludeServerUrl="false"
                     encodeNames="true"
                     languageEmbedding="asNeeded"
                     languageLocation="filePath"
                     lowercaseUrls="false"
                     shortenUrls="true"
                     useDisplayName="false"
                     type="Sitecore.Feature.Commerce.Catalog.Website.Infrastructure.Provider.CatalogLinkProvider, Sitecore.Feature.Commerce.Catalog.Website" />
            </providers>
        </linkManager>
        <settings>
            <setting name="Storefront.UrlTokenDelimiter" value="_" />
            <setting name="Storefront.EncodedDelimiter" value="%5f" />
        </settings>
        <contentSearch>
            <indexConfigurations>
                <defaultLuceneIndexConfiguration type="Sitecore.ContentSearch.LuceneProvider.LuceneIndexConfiguration, Sitecore.ContentSearch.LuceneProvider">
                    <fieldMap type="Sitecore.ContentSearch.FieldMap, Sitecore.ContentSearch">
                        <fieldNames hint="raw:AddFieldByFieldName">
                            <field fieldName="ProductColor" storageType="YES" indexType="TOKENIZED" vectorType="NO" boost="1f" type="System.Collections.Generic.List`1[[System.String, mscorlib]]" settingType="Sitecore.ContentSearch.LuceneProvider.LuceneSearchFieldConfiguration, Sitecore.ContentSearch.LuceneProvider">
                                <Analyzer type="Lucene.Net.Analysis.KeywordAnalyzer, Lucene.Net" />
                            </field>

                            <field fieldName="ProductSize" storageType="YES" indexType="TOKENIZED" vectorType="NO" boost="1f" type="System.Collections.Generic.List`1[[System.String, mscorlib]]" settingType="Sitecore.ContentSearch.LuceneProvider.LuceneSearchFieldConfiguration, Sitecore.ContentSearch.LuceneProvider">
                                <Analyzer type="Sitecore.ContentSearch.LuceneProvider.Analyzers.LowerCaseKeywordAnalyzer, Sitecore.ContentSearch.LuceneProvider" />
                            </field>
                        </fieldNames>
                    </fieldMap>

                    <documentOptions type="Sitecore.ContentSearch.LuceneProvider.LuceneDocumentBuilderOptions, Sitecore.ContentSearch.LuceneProvider">
                        <fields hint="raw:AddComputedIndexField">
                            <field fieldName="ProductColor" returnType="stringCollection">Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CommerceVariants, Sitecore.Commerce.Connect.CommerceServer</field>
                            <field fieldName="ProductSize" returnType="stringCollection">Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CommerceVariants, Sitecore.Commerce.Connect.CommerceServer</field>
                        </fields>
                    </documentOptions>
                </defaultLuceneIndexConfiguration>
            </indexConfigurations>
        </contentSearch>
        <solutionFramework>
            <indexing>
                <providers>
                    <add name="productformatter" type="Sitecore.Feature.Commerce.Catalog.Website.Infrastructure.Provider.ProductSearchResultFormatter, Sitecore.Feature.Commerce.Catalog.Website" resolve="true" patch:before="add[@name='fallback']" />
                    <add name="categoryformatter" type="Sitecore.Feature.Commerce.Catalog.Website.Infrastructure.Provider.CategorySearchResultFormatter, Sitecore.Feature.Commerce.Catalog.Website" resolve="true" patch:before="add[@name='fallback']" />
                    <add name="catalog" type="Sitecore.Feature.Commerce.Catalog.Website.Infrastructure.Provider.ProductCatalogQueryProvider, Sitecore.Feature.Commerce.Catalog.Website" resolve="true" patch:before="add[@name='fallback']" />
                </providers>
            </indexing>
        </solutionFramework>
    </sitecore>
</configuration>