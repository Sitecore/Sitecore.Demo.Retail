@*//-----------------------------------------------------------------------
    // Copyright 2016 Sitecore Corporation A/S
    // Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
    // except in compliance with the License. You may obtain a copy of the License at
    //       http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software distributed under the
    // License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // either express or implied. See the License for the specific language governing permissions
    // and limitations under the License.
    // -------------------------------------------------------------------------------------------*@

@using Sitecore.Demo.Retail.Foundation.Commerce.Website.Extensions
@model Sitecore.Demo.Retail.Feature.Catalog.Website.Models.ProductListHeaderViewModel
@{
    if (Model?.Pagination == null || Model.Pagination.TotalResultCount <= 0)
    {
        return;
    }
}

<div class="row m-b-1">
    @{
        <div class="col-md-12">
            <div class="row">
                <div class="col-md-4 col-sm-6 hidden-xs">
                    @if (Model.Pagination.NumberOfPages > 1)
                    {
                        <div class="showing-amount">
                            <h6>@Html.Sitecore().Text("/Catalog/Product List/Showing", "Showing") <span>@Model.Pagination.StartResultIndex</span> - <span>@Model.Pagination.EndResultIndex</span> @Html.Sitecore().Text("/Catalog/Product List/Of", "of") <span>@Model.Pagination.TotalResultCount</span></h6>
                        </div>
                    }
                </div>
                <div class="col-md-8 col-sm-6 col-xs-12 form-inline text-right">
                    @if (Model.Pagination.NumberOfPages > 1)
                    {
                        <div class="form-group">
                            <label for="resultsPerPageDropDown">@Html.Sitecore().Text("/Catalog/Product List/Results Per Page", "Results per page:")</label>
                            <select id="resultsPerPageDropDown" class="form-control @Model.PageSizeClass">
                                @{
#warning Move to Model
                                    var pageSizesString = Html.Sitecore().Text("/Catalog/Product List/Results Per Page Values", "12|18|24|30");

                                    if (!string.IsNullOrEmpty(pageSizesString))
                                    {
                                        var pageSizes = pageSizesString.Split('|');
                                        foreach (var size in pageSizes)
                                        {
                                            int pageSize;
                                            if (int.TryParse(size, out pageSize))
                                            {
                                                <option value="@pageSize" @if (Model.Pagination.PageResultCount == pageSize)
                                                                          {
                                                                              <text> selected </text>
                                                                          }>@pageSize</option>
                                            }
                                        }
                                    }
                                }
                            </select>
                        </div>
                    }
                    <div class="form-group p-l-1">
                        @if (Model.SortFields != null && Model.SortFields.Any())
                        {
                            <label for="sortDropDown">@Html.Sitecore().Text("/Catalog/Product List/Sort By", "Sort by:")</label>
                            <select class="form-control sortDropdown" id="sortDropDown">
                                <option value="">@Html.Sitecore().Text("/Catalog/Product List/Relevance", "Relevance")</option>
                                @foreach (var sortField in Model.SortFields)
                                {
                                    var ascSelected = string.Empty;
                                    var descSelected = string.Empty;

                                    if (!string.IsNullOrEmpty(ViewBag.SortField) && ViewBag.SortField == sortField.Name)
                                    {
                                        if (ViewBag.SortDirection == SortDirection.Ascending)
                                        {
                                            ascSelected = "selected";
                                        }
                                        else
                                        {
                                            descSelected = "selected";
                                        }
                                    }

                                    <option value="@sortField.Name+" @ascSelected>@sortField.DisplayName @Html.Sitecore().Text("/Catalog/Product List/Ascending", "(Asc)")</option>
                                    <option value="@sortField.Name-" @descSelected>@sortField.DisplayName @Html.Sitecore().Text("/Catalog/Product List/Descending", "(Desc)")</option>
                                }
                            </select>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>