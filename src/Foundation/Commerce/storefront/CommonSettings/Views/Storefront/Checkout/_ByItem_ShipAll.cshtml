@*//-----------------------------------------------------------------------
// Copyright 2016 Sitecore Corporation A/S
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
// except in compliance with the License. You may obtain a copy of the License at
//       http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the
// License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
// either express or implied. See the License for the specific language governing permissions
// and limitations under the License.
// -------------------------------------------------------------------------------------------*@

@{
    var deliveryPage = Html.Sitecore().CurrentItem.Children["Delivery"];

    // Header
    var headerShipAllLabel = Html.Sitecore().Field("Ship All Items Label", deliveryPage);
    var shippingAddressLabel = Html.Sitecore().Field("Shipping Address Label", deliveryPage);
    var chooseAddressLabel = Html.Sitecore().Field("Choose Address Book Label", deliveryPage);
    var addressLabel = Html.Sitecore().Field("Choose Address Label", deliveryPage);
    var shippingNameLabel = Html.Sitecore().Field("Shipping Name Label", deliveryPage);
    var shippingNameLabelPlaceholder = deliveryPage["Shipping Name Label"];
    var cityLabel = Html.Sitecore().Field("City Label", deliveryPage);
    var cityLabelPlaceholder = deliveryPage["City Label"];
    var countryLabel = Html.Sitecore().Field("Country Label", deliveryPage);
    var stateLabel = Html.Sitecore().Field("State Label", deliveryPage);
    var stateLabelPlaceholder = deliveryPage["State Label"];
    var address1Label = Html.Sitecore().Field("Address Label", deliveryPage);
    var address1LabelPlaceholder = deliveryPage["Address Label"];
    var zipcodeLabel = Html.Sitecore().Field("Zipcode Label", deliveryPage);
    var zipcodeLabelPlaceholder = deliveryPage["Zipcode Label"];
    var viewButtonLabel = Html.Sitecore().Field("View Button Label", deliveryPage);
    var viewButtonLoadingLabel = deliveryPage["View Button Loading Label"];
    var otherAddressLabel = Html.Sitecore().Field("Choose Other Address Label", deliveryPage);
    var availableShippingOptionsLabel = Html.Sitecore().Field("Available Shipping Options Label", deliveryPage);
    var shipThisItemHeader = Html.Sitecore().Field("Ship This Item Header", deliveryPage);
}

<div class="col-md-12">
    <h1>@shipThisItemHeader</h1>
</div>
<div data-bind="attr: { id: 'shipAllAddressContainer'+ externalCartLineId }, with: shippingAddress">
    <div class="col-md-12">
        <h3>@shippingAddressLabel:</h3>
    </div>
    <div class="col-md-4 col-md-offset-8">
        <div class="form-group" data-bind="visible: $root.isAuthenticated">
            <label data-bind="attr: { for:'ShippingAddressSelect-'+ $parent.externalCartLineId }">@chooseAddressLabel</label>
            <select class="form-control" data-bind="foreach: $root.userAddresses, value: $parent.selectedShippingAddress, attr: { id:'ShippingAddressSelect-'+ $parent.externalCartLineId }" title="@addressLabel" title2="@otherAddressLabel">
                <!-- ko if: externalId() != 'UseShipping' -->
                <option data-bind="attr:{ value:externalId }, text: fullAddress"></option>
                <!-- /ko -->
            </select>
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-group required-field">
            <label data-bind="attr:{for:'ShipAllItemsInput-Name-'+ $parent.externalCartLineId}">@shippingNameLabel<span class="required">*</span></label>
            <input type="text" class="form-control" data-bind="attr:{id:'ShipAllItemsInput-Name-'+ $parent.externalCartLineId}, value: name, event: {change: $parent.shippingAddressFieldChanged}" placeholder="@shippingNameLabelPlaceholder">
        </div>
        <div class="form-group required-field">
            <label data-bind="attr:{for:'ShipAllItemsInput-City-'+ $parent.externalCartLineId}">@cityLabel<span class="required">*</span> </label>
            <input type="text" class="form-control" data-bind="attr:{id:'ShipAllItemsInput-City-'+ $parent.externalCartLineId}, value: city, event: {change: $parent.shippingAddressFieldChanged}" placeholder="@cityLabelPlaceholder">
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-group required-field">
            <label data-bind="attr:{for:'ShipAllItemsInput-Country-'+ $parent.externalCartLineId}">@countryLabel<span class="required">*</span></label>
            <select class="form-control" data-bind="attr:{id:'ShipAllItemsInput-Country-'+ $parent.externalCartLineId}, options: $root.countries, optionsText:'country', optionsValue:'code', value: country, event: {change: $parent.shippingAddressFieldChanged}"></select>
        </div>
        <div class="form-group">
            <label data-bind="attr:{for:'ShipAllItemsInput-State-'+ $parent.externalCartLineId}">@stateLabel</label>
            <!-- ko if: states == 'undefined' -->
            <select class="form-control" data-bind="attr:{id:'ShipAllItemsInput-State-'+ $parent.externalCartLineId}, options: $root.states, optionsText:'name', optionsValue:'code', value: state, event: {change: $parent.shippingAddressFieldChanged}"></select>
            <!-- /ko -->
            <!-- ko if: states != 'undefined' -->
            <input type="text" class="form-control" data-bind="attr:{id:'ShipAllItemsInput-State-'+ $parent.externalCartLineId}, value: state, event: {change: $parent.shippingAddressFieldChanged}" placeholder="@stateLabelPlaceholder">
            <!-- /ko -->
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-group">
            <label data-bind="attr:{for:'ShipAllItemsInput-Address-'+ $parent.externalCartLineId}">@address1Label</label>
            <input type="text" class="form-control" data-bind="attr:{id:'ShipAllItemsInput-Address-'+ $parent.externalCartLineId}, value: address1, event: {change: $parent.shippingAddressFieldChanged}" placeholder="@address1LabelPlaceholder">
        </div>
        <div class="form-group">
            <label data-bind="attr:{for:'ShipAllItemsInput-Zipcode-'+ $parent.externalCartLineId}">@zipcodeLabel</label>
            <input type="text" class="form-control" data-bind="attr:{id:'ShipAllItemsInput-Zipcode-'+ $parent.externalCartLineId}, value: zipPostalCode, event: {change: $parent.shippingAddressFieldChanged}" placeholder="@zipcodeLabelPlaceholder">
        </div>
    </div>
    <input type="text" data-bind="attr:{id:'ShipAllItemsInput-ExternalId-'+ $parent.externalCartLineId}, value: externalId" style="visibility: hidden; display: none;" />
</div>
<div data-bind="attr:{id:'shipAllOptionsContainer'+ externalCartLineId}">
    <div class="col-md-12"><h3>@availableShippingOptionsLabel:</h3></div>
    <div class="col-md-3">
        <button data-bind="attr:{id:'lineGetShippingMethods-'+ externalCartLineId}" type="button" data-loading-text="@viewButtonLoadingLabel" class="btn btn-default lineGetShippingMethods">@viewButtonLabel</button>
    </div>
    <div class="col-md-9">
        <div class="form-group shipping-options" data-bind="foreach: shippingMethods, attr:{id:'shippingMethodsContainer-'+ externalCartLineId}">
            <input type="radio" style="margin-left:20px" data-bind="attr: {'name': 'shippingMethodId-' + $parent.externalCartLineId ,'id': 'method-' + description, 'data-name':description, pvalue: id}, checkMe: $parent.shippingMethod, event: {change: $parent.selectShippingMethod}">
            <label data-bind="text: description" style="vertical-align: middle;"></label>
        </div>
    </div>
</div>