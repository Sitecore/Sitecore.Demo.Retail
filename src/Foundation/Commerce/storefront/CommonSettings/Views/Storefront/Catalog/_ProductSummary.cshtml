@*//-----------------------------------------------------------------------
    // Copyright 2016 Sitecore Corporation A/S
    // Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
    // except in compliance with the License. You may obtain a copy of the License at
    //       http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software distributed under the
    // License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // either express or implied. See the License for the specific language governing permissions
    // and limitations under the License.
    // -------------------------------------------------------------------------------------------*@

@using Sitecore.Commerce.Entities.Inventory
@using Sitecore.Reference.Storefront.Managers
@model ProductViewModel
@{
    if (Model == null)
    {
        return;
    }

    var itemType = Model.Item.ItemType();

    bool isCategory = (itemType == StorefrontConstants.ItemTypes.Category);
    var brand = @Model.RenderField("Brand");
    var brandLength = brand.ToString().Length;
}

<div class="col-item">
    <div class="photo">
        @using (Html.EditFrame(Model.Item.Paths.FullPath, CommerceConstants.KnownItemPaths.EditFrameImages))
        {
            if (Model.Images != null && Model.Images.Count > 0)
            {
                <a href="@Model.GetLink()">
                    <img src="@Model.Images[0].GetImageUrl(300, 300)" class="img-responsive" alt="product image" title="@Model.DisplayName" />
                </a>
            }
            else
            {
                <a href="@Model.GetLink()">
                    @Html.Sitecore().Field("Image", Html.Sitecore().CurrentItem, new { Parameters = new Sitecore.Collections.SafeDictionary<string> { { "class", "img-responsive" }, { "title", @Model.DisplayName } } })
                </a>
            }
        }
    </div>
    <div class="info">
        <div class="row">
            <div class="price col-md-12 col-xs-12">
                <a href="@Model.GetLink()">
                    <h5 class="twolines">@Model.DisplayName</h5>
                </a>
                @if (@brand != null && @brandLength > 0)
                {
                    <p>@brand</p>
                }
                else
                {
                    <p class="nobrand">&nbsp;</p>
                }
                @if (!isCategory)
                {
                    bool isVariant = Model.LowestPricedVariantAdjustedPrice.HasValue;
                    bool isOnSale = false;
                    string adjustedPriceWithCurrency = string.Empty;
                    string listPriceWithCurrency = string.Empty;
                    decimal savingsPercentage = 0.0M;
                    decimal listPrice = 0.0M;
                    decimal adjustedPrice = 0.0M;
                    bool displayStartingFrom = false;

                    if (isVariant && Model.LowestPricedVariantListPrice.HasValue)
                    {
                        adjustedPrice = Model.LowestPricedVariantAdjustedPrice.Value;
                        listPrice = Model.LowestPricedVariantListPrice.Value;
                        displayStartingFrom = (Model.HighestPricedVariantAdjustedPrice.HasValue && adjustedPrice < Model.HighestPricedVariantAdjustedPrice.Value);

                        adjustedPriceWithCurrency = Model.LowestPricedVariantAdjustedPriceWithCurrency;
                        isOnSale = (adjustedPrice < listPrice);
                        if (isOnSale)
                        {
                            listPriceWithCurrency = Model.LowestPricedVariantListPriceWithCurrency;
                            savingsPercentage = Model.VariantSavingsPercentage;
                        }
                        else
                        {
                            listPriceWithCurrency = adjustedPriceWithCurrency;
                        }
                    }
                    else
                    {
                        listPriceWithCurrency = Model.ListPriceWithCurrency;
                        listPrice = (Model.ListPrice.HasValue) ? Model.ListPrice.Value : 0.0M;
                        
                        isOnSale = Model.IsOnSale;
                        if (isOnSale)
                        {
                            adjustedPriceWithCurrency = Model.AdjustedPriceWithCurrency;
                            savingsPercentage = Model.SavingsPercentage;
                        }
                    }

                    if (displayStartingFrom)
                    {
                        <h4 class="starting-from-price" pid="lowestVariantPrice">Starting from</h4>
                    }
                    if (isOnSale)
                    {
                        <h4 class="price-text-color" pid="priceNow">@Html.DisplayFor(model => adjustedPriceWithCurrency)</h4>
                        <h5 class="price-before" pid="price">@Html.DisplayFor(model => listPriceWithCurrency)</h5>
                        <span class="price-savings" pid="savings">@Html.Sitecore().Field("Save percent lead", Model.Rendering.RenderingItem) @savingsPercentage%</span>
                    }
                    else
                    {
                        <h4 class="price-text-color" pid="price">@Html.DisplayFor(model => listPriceWithCurrency)</h4>
                        <h5 class="price-before"></h5>
                        <span class="price-savings"></span>
                        <span class="if-no-before-price"></span>
                    }
                    if (Model.StockStatus != null)
                    {
                        <span pid="stockStatus" class="price-stock">@Html.DisplayFor(model => Model.StockStatusName)</span>
                        if (Model.StockAvailabilityDate != null)
                        {
                            <span pid="stockAvailabilityDate" class="price-stock"> / @Html.DisplayFor(model => Model.StockAvailabilityDate)</span>
                        }
                        else
                        {
                            <span class="price-stock"></span>
                        }
                    }
                    else
                    {
                        <span class="price-stock">&nbsp;</span>
                        <span class="price-stock"></span>
                    }
                }
            </div>
            @if (!isCategory)
            {
                <div class="rating hidden-sm hidden-xs col-md-12 col-xs-12">
                    <ul>
                        <li @(Model.CustomerAverageRating >= 1 ? "class=rated" : "")><span class="glyphicon glyphicon-star"></span></li>
                        <li @(Model.CustomerAverageRating >= 2 ? "class=rated" : "")><span class="glyphicon glyphicon-star"></span></li>
                        <li @(Model.CustomerAverageRating >= 3 ? "class=rated" : "")><span class="glyphicon glyphicon-star"></span></li>
                        <li @(Model.CustomerAverageRating >= 4 ? "class=rated" : "")><span class="glyphicon glyphicon-star"></span></li>
                        <li @(Model.CustomerAverageRating >= 5 ? "class=rated" : "")><span class="glyphicon glyphicon-star"></span></li>
                    </ul>
                </div>
            }
        </div>
        @if (!isCategory)
        {
            <div class="row">
                <div class="col-md-12 col-xs-12">
                    <div class="separator clear-left">
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 text-center">
                                <p class="btn-details">
                                    <a href="@Model.GetLink()">
                                        <span class="glyphicon glyphicon-th-list"></span> @Model.ProductDetailsLinkText
                                    </a>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="row">
                <div class="col-md-12 col-xs-12">
                    <div class="separator clear-left">
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 text-center">
                                <p class="btn-details">
                                    <a href="@Model.GetLink()">
                                        <span></span> @Html.Sitecore().Field("Category", Model.Rendering.RenderingItem)
                                    </a>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="clearfix"> </div>
    </div>
</div>